<!--<?xml version="1.0" encoding="UTF-8" ?>-->
<!--&lt;!&ndash; SQL 맵퍼 파일은 xml이기 때문에 제일 먼저 xml 선언이 옵니다. &ndash;&gt;-->
<!--<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD mapper 3.0//EN"-->
<!--        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">-->


<!--&lt;!&ndash; Mapper 인터페이스의 패키지명과 이름을 namespace로 설정합니다. &ndash;&gt;-->
<!--<mapper namespace="com.naver.myhome4.mybatis.mapper.CommentMapper">-->

<!--&lt;!&ndash;-->
<!--    1. 태그에 id속성은 Mapper인터페이스에 사용된 메서드명과 동일 하게 작성됩니다.-->
<!--    2. resultType속성은 Mapper인터페이스에 사용된 메서드의 반환 타입을 작성해줍니다.-->
<!--&ndash;&gt;-->

<!--    <select id="getListCount" resultType="int" >-->
<!--        select count(*)-->
<!--        from post_comment-->
<!--        where post_idx = #{post_idx}-->
<!--    </select>-->


<!--    <select id="getCommentList" resultType="comment">-->
<!--        select *-->
<!--        from ( select rownum rnum, num, idx, content, reg_date, post_idx-->
<!--            from(-->
<!--                select num, idx, content, register_date, post_idx-->
<!--                from post_comment-->
<!--                where post_idx = #{post_idx}-->
<!--                order by register_date desc-->
<!--                )-->
<!--            )-->
<!--        where rnum between #{offset} and #{pageSize}-->
<!--    </select>-->


<!--    <insert id="commentsInsert">-->
<!--        insert into post_comment-->
<!--        values(comment_idx, #{idx}, #{content}, current_timestamp, #{post_idx})-->
<!--    </insert>-->


<!--    <update id="commentsUpdate">-->
<!--        update post_comment-->
<!--        set content=#{content}-->
<!--        where num = #{num}-->
<!--    </update>-->

<!--    <delete id="commentsDelete">-->
<!--        delete post_comment-->
<!--        where num = #{num}-->
<!--    </delete>-->

<!--</mapper>-->