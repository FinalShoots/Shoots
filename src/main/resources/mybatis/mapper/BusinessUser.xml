<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.Shoots.mybatis.mapper.BusinessUserMapper">

    <select id="selectById" resultType="businessuser">
        select * from business_user where business_id = #{id}
    </select>

    <select id="selectWithId" resultType="businessuser">
        select * from business_user where business_id = #{id}
    </select>


    <insert id="insert">
        insert into business_user (business_id, password, business_name, business_number,
                                   tel, email, post, address)
        values (#{business_id}, #{password}, #{business_name}, #{business_number},
                #{tel}, #{email}, #{post}, #{address}
                )
    </insert>

    <select id="selectByEmail" resultType="businessuser">
        select * from business_user where email = #{email}
    </select>

    <select id="findIdWithEmail" resultType="businessuser">
        select * from business_user where email = #{email}
    </select>

    <select id="selectWithIdAndEmail" resultType="businessuser">
        select * from business_user where business_id = #{business_id} and email = #{email}
    </select>

    <update id="updateBusinessUserPassword">
        update business_user
        set password = #{password}
        where business_id = #{business_id}
    </update>

    <select id="getBusinessUsers">
        SELECT
            DATE(register_date) AS register_date,
            COUNT(*) AS businessCount
        FROM business_user where login_status = 'access'
        GROUP BY
            DATE(register_date)
        ORDER BY
            register_date;
    </select>


    <sql id="search">
        <if test="search_word != null">
            where business_id like #{search_word} or business_name like #{search_word}
        </if>
    </sql>

    <sql id="searchApproved">
        <if test="search_word != null">
            and (business_id like #{search_word} or business_name like #{search_word})
        </if>
    </sql>

    <select id="getList">
        select * from business_user
                 <include refid="search" />
                 order by business_idx desc
            LIMIT #{offset}, #{pageSize}
    </select>

    <select id="listCount">
        select count(*) from business_user <include refid="search" />
    </select>

    <update id="approveStatus">
        update business_user set login_status = "access" where business_idx=#{id}
    </update>

    <update id="refuseStatus">
        update business_user set login_status = "refused" where business_idx=#{id}
    </update>

    <select id="getApprovedList">
        select * from business_user where login_status = "access" <include refid="searchApproved" /> order by business_idx desc
            LIMIT #{offset}, #{pageSize}
    </select>

    <select id="listApprovedCount">
        select count(*) from business_user where login_status = "access" <include refid="searchApproved" />
    </select>

    <select id="getEmail">
        select email from business_user where business_idx=#{id}
    </select>

    <select id="getBusinessUserInfoById" resultType="BusinessUser">
        select * from business_user where business_idx = #{business_idx}
    </select>

    <select id="getBusinessUserAddressById" resultType="BusinessUser">
        select business_idx, address from business_user where business_id = #{business_id}
    </select>

    <select id="getAllBusinessIndexes" resultType="java.lang.Integer" >
        select business_idx from business_user where login_status = 'access';
    </select>

    <select id="getBusinessNames" resultMap="businessUserResultMap">
        select business_idx, business_name
        from business_user
        where business_idx in
        <foreach item="idx" collection="businessIdxList" open="(" separator="," close=")">
            #{idx}
        </foreach>
    </select>

    <resultMap id="businessUserResultMap" type="com.Shoots.domain.BusinessUser">
        <id property="business_idx" column="business_idx" />
        <result property="business_name" column="business_name" />
    </resultMap>

    <select id="getAddressByBusinessIdx" resultType="String">
        select address
        from business_user
        where business_idx = #{businessIdx}
    </select>

    <sql id="searchForLocation">
        <if test="search_word != null">
            where business_name like #{search_word} or address like #{search_word}
        </if>
    </sql>

    <select id="getListForLocation">
        select * from business_user where login_status = 'access'
        <include refid="searchForLocation" />
        order by business_idx desc
        LIMIT #{offset}, #{pageSize}
    </select>
</mapper>