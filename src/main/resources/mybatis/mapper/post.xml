<?xml version="1.0" encoding="UTF-8" ?>
<!-- SQL 맵퍼 파일은 xml이기 때문에 제일 먼저 xml 선언이 옵니다. -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<!-- Mapper 인터페이스의 패키지명과 이름을 namespace로 설정합니다. -->
<mapper namespace="com.Shoots.mybatis.mapper.PostMapper">
<!--
    1. 태그에 id속성은 Mapper인터페이스에 사용된 메서드명과 동일 하게 작성됩니다.
    2. resultType속성은 Mapper인터페이스에 사용된 메서드의 반환 타입을 작성해줍니다.
-->

    <select id="getListCount" resultType="int">
        select count(*) from post
        WHERE category = #{category}
    </select>



    <!-- 문법 오류
    where rnum >= #{start}
    ==> 해결법
       ① where rnum &gt;= #{start}
       ② where rnum <![CDATA[   >=   ]]> #{start}

    ==> 설명
    ① HTML 문서는 '<', '>' 와 같은 마크업 문자들을 파싱해서 읽어들이는 구조입니다.
        그래서 마크업 문자들을 작다(<), 크다(>)로 사용하기 위해서
        '&lt;', '&gt;' 등의 escape 문자열(escape character)을 이용해야 합니다.

    < : &lt;
    > : &gt;

    ② CDATA(Character DATA) XML 파서가 분석하지 않는 문자 데이터를 의미합니다.
        사용하는 방법은 <![CDATA[ 와 ]]> 사이에 문자들을 넣으면 됩니다.
    -->
    <select id="getPostList" resultType="post">
        SELECT p.post_idx, p.writer, p.category, p.title, p.content, p.post_file, p.price, p.register_date, p.readcount, r.user_id
        FROM post p
                 INNER JOIN regular_user r ON p.writer = r.idx
        WHERE p.category = #{category}
        ORDER BY p.register_date DESC
            LIMIT #{start}, #{end}
    </select>




    <insert id="insertPost">
        <!-- 먼저 post_id (또는 BOARD_NUM)를 자동 증가 방식으로 가져옵니다 -->
        <selectKey resultType="int" order="BEFORE" keyProperty="post_idx">
            select nvl(max(post_idx), 0) + 1 from post
        </selectKey>

        <!-- 실제 insert 문 -->
        insert into post
        (post_idx, writer, category, title, content,
        post_file, price, register_date, readcount)
        values
        (#{post_idx}, #{writer}, #{category}, #{title}, #{content},
        #{post_file}, #{price}, current_timestamp, #{readcount})
    </insert>



    <update id="setReadCountUpdate">
        update post
        set READCOUNT = READCOUNT + 1
        where POST_IDX = #{post_idx}
    </update>




    <select id="getDetail" resultType="Post">
        select * from(
                         select p.*, r.user_id, r.idx, r.user_file
                         from post p
                                  join regular_user r
                                       on p.writer = r.idx
                         order by post_idx desc
                     )
        where post_idx = #{post_idx}
    </select>



    <select id="isPostWriter" resultType="Post">
        select writer
        from post
        where post_idx=#{post_idx}
--         and writer=#{idx}
    </select>



    <update id="postModify">
        update post
        set title=#{title},
            content=#{content},
            price=#{price},
            post_file=#{post_file}
        where post_idx = #{post_idx}
    </update>


    <delete id="boardDelete">
        delete from post
        where post_idx=#{post_idx}
    </delete>





    <select id="getDeleteFileList" resultType="String">
        select post_file from delete_file
    </select>


    <delete id="deleteFileList">
        delete delete_file
        where post_file=#{file_name}
    </delete>


</mapper>