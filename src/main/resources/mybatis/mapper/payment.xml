<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.Shoots.mybatis.mapper.PaymentMapper">

    <insert id="insertPayment" >
        insert into PAYMENT (
            MATCH_IDX, SELLER_IDX, BUYER_IDX, PAYMENT_METHOD, PAYMENT_AMOUNT,
            PAYMENT_DATE, PAYMENT_STATUS, MERCHANT_UID, IMP_UID
        )
        values (
            #{match_idx}, #{seller_idx}, #{buyer_idx}, #{payment_method}, #{payment_amount},
            CURRENT_TIMESTAMP, #{payment_status}, #{merchant_uid}, #{imp_uid}
                         );
    </insert>

    <select id="hasPaidForMatch" resultType="boolean">
        SELECT COUNT(*) > 0 FROM PAYMENT
        WHERE BUYER_IDX = #{idx}
          AND MATCH_IDX = #{match_idx}
          AND PAYMENT_STATUS = 'paid'
    </select>

    <select id="getPlayerCount" resultType="int">
        select COUNT(*) from PAYMENT p
        where match_idx = #{match_idx}
        and payment_status = 'paid'
    </select>

    <select id="getPaymentListById" resultType="java.util.HashMap">
        select p.*, r.*,
            CASE
                WHEN p.PAYMENT_STATUS = 'refunded' THEN h.ACTION_DATE
                ELSE NULL
            END as ACTION_DATE
        from PAYMENT p
            left join regular_user r on p.BUYER_IDX = r.idx
            left join PAYMENT_HISTORY h on p.PAYMENT_IDX = h.PAYMENT_IDX
        where p.SELLER_IDX = #{idx}
    </select>

    <select id="getPaymentInfoById" resultType="Payment">
        select * from PAYMENT where BUYER_IDX = #{idx} and MATCH_IDX = #{match_idx}
        order by PAYMENT_DATE desc LIMIT 1
    </select>

    <update id="updatePayment">
        update PAYMENT set PAYMENT_STATUS = 'refunded' where payment_idx = #{payment_idx}
    </update>
</mapper>