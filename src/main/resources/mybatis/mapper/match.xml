<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.Shoots.mybatis.mapper.MatchMapper">

    <select id="getListCount" resultType="int">
        select count(*) from match_post
    </select>

    <select id="getListCountById" resultType="int">
        select count(*) from match_post where writer = #{idx}
    </select>

    <select id="getMatchList" parameterType="map" resultType="Match">
        SELECT mp.*, b.business_name
        FROM match_post mp
        LEFT JOIN business_user b ON mp.writer = b.business_idx
        <where>
            <if test="filter != null and filter == 'today'">
                mp.match_date = CURDATE()
            </if>
            <if test="gender != null">
                AND mp.player_gender = #{gender}
            </if>
            <if test="level != null">
                AND mp.match_level = #{level}
            </if>
            <if test="business_idx != null">
                AND mp.writer = #{business_idx}
            </if>
            <if test="filter == null">
                AND mp.match_date >= CURDATE()
            </if>
        </where>
        ORDER BY
        mp.match_date DESC,
        mp.match_time DESC
        LIMIT #{limit} OFFSET #{offset}
    </select>

    <select id="getMatchListById" parameterType="map" resultType="Match">
        SELECT mp.*, b.business_name
        FROM match_post mp
            LEFT JOIN business_user b
            ON mp.writer = b.business_idx
        <where>
            mp.writer = #{idx}
            <if test="filter != null and filter == 'today'">
                AND mp.match_date = CURDATE()
            </if>
            <if test="gender != null">
                AND mp.player_gender = #{gender}
            </if>
            <if test="level != null">
                AND mp.match_level = #{level}
            </if>
        </where>
        ORDER BY
            mp.match_date DESC,
            mp.match_time DESC
            LIMIT
            #{limit} OFFSET #{offset};
    </select>

    <select id="getMatchListByIdForSales" parameterType="map" resultType="Match">
        SELECT * FROM match_post
        <where>
            writer = #{idx}
            <if test="month != null">
                AND MONTH(match_date) = #{month}
            </if>
            <if test="year != null">
                AND YEAR(match_date) = #{year}
            </if>
            <if test="gender != null">
                AND player_gender = #{gender}
            </if>
            <if test="level != null">
                AND match_level = #{level}
            </if>
        </where>
        ORDER BY
        match_date DESC,
        match_time DESC
    </select>

    <insert id="insertMatch">
        INSERT INTO match_post (
            writer,
            match_date,
            match_time,
            player_max,
            player_min,
            player_gender,
            match_level,
            team_style,
            price,
            register_date
        ) VALUES (
                     #{writer},
                     #{match_date},
                     #{match_time},
                     #{player_max},
                     #{player_min},
                     #{player_gender},
                     #{match_level},
                     #{team_style},
                     #{price},
                     CURRENT_TIMESTAMP
                 );
    </insert>

    <select id="getDetail" resultType="match">
        SELECT mp.*, b.business_name, b.address
        FROM match_post mp
            LEFT JOIN business_user b
            ON mp.writer = b.business_idx
        WHERE
            mp.match_idx = #{match_idx};
    </select>

    <select id="getMatchListByMatchTime" resultType="Match">
        select * from match_post where match_date = #{matchDate} and match_time = #{matchTime}
    </select>

    <select id="getMatchListByDeadline" resultType="Match">
        SELECT mp.*, b.business_name
        FROM match_post mp
                 LEFT JOIN business_user b ON mp.writer = b.business_idx
        WHERE TIMESTAMP(mp.match_date, mp.match_time) >= #{deadline}
        ORDER BY ABS(TIMESTAMP(mp.match_date, mp.match_time) - #{deadline}) LIMIT 3
    </select>

    <select id="getTotalMatchById" resultType="int">
        SELECT COUNT(*) FROM match_post WHERE writer = #{business_idx};
    </select>

    <select id="getTotalMatchByMonth" resultType="map">
        SELECT
            MONTH(match_date) AS month,
            COUNT(*) AS match_count
        FROM match_post
        WHERE writer = #{business_idx}
          AND YEAR(match_date) = YEAR(CURDATE())
        GROUP BY MONTH(match_date)
        ORDER BY month;
    </select>

    <select id="getAvgPrice" resultType="double">
        SELECT AVG(price) AS avg_price FROM match_post;
    </select>

    <select id="getAvgPriceByIdx" resultType="double">
        SELECT AVG(price) AS avg_price FROM match_post WHERE writer = #{business_idx};
    </select>

    <update id="updateMatch">
        update match_post set match_date = #{match_date}, match_time = #{match_time}, match_level = #{match_level}, team_style = #{team_style},
                              player_min = #{player_min},  player_max = #{player_max},  player_gender = #{player_gender}, price = #{price}
        where match_idx = #{match_idx}
    </update>

    <delete id="deleteMatch">
        delete from match_post where match_idx = #{match_idx}
    </delete>
</mapper>